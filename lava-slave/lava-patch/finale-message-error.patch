From effac7135919c4ad0c697fed312c6a373694e9f7 Mon Sep 17 00:00:00 2001
From: Corentin LABBE <clabbe@baylibre.com>
Date: Tue, 3 Sep 2019 10:46:16 +0200
Subject: [PATCH] boot: detect error message in final phase

This commit adds error message detection in the final bootloader-commands action.

Closes: #308
---
 lava_dispatcher/actions/boot/__init__.py | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/lava_dispatcher/actions/boot/__init__.py b/lava_dispatcher/actions/boot/__init__.py
index 3a4c82ce8..81437852e 100644
--- a/lava_dispatcher/actions/boot/__init__.py
+++ b/lava_dispatcher/actions/boot/__init__.py
@@ -863,7 +863,14 @@ class BootloaderCommandsAction(Action):
         for (index, line) in enumerate(commands):
             connection.sendline(line, delay=self.character_delay)
             if index + 1 == len(commands):
-                continue
+                if final_message and self.expect_final:
+                    connection.prompt_str = final_message
+                else:
+                    continue
+                if error_messages:
+                    if isinstance(connection.prompt_str, str):
+                        connection.prompt_str = [connection.prompt_str]
+                    connection.prompt_str = connection.prompt_str + error_messages
             res = self.wait(connection, max_end_time)
             if res != 0:
                 msg = "matched a bootloader error message: '%s' (%d)" % (
@@ -872,10 +879,6 @@ class BootloaderCommandsAction(Action):
                 )
                 raise InfrastructureError(msg)
 
-        if final_message and self.expect_final:
-            connection.prompt_str = final_message
-            self.wait(connection, max_end_time)
-
         self.set_namespace_data(
             action="shared", label="shared", key="connection", value=connection
         )
-- 
2.21.0

