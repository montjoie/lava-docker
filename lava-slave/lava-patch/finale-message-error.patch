commit 6244fb251cf07229c98cde987f18b4c13fc288ef
Author: Corentin LABBE <clabbe@baylibre.com>
Date:   Tue Sep 3 10:46:16 2019 +0200

    boot: detect error message in final phase
    
    This commit adds error message detection in the final bootloader-commands action.
    
    Closes: #308

diff --git a/lava_dispatcher/actions/boot/__init__.py b/lava_dispatcher/actions/boot/__init__.py
index 8f898d503..ab450abab 100644
--- a/lava_dispatcher/actions/boot/__init__.py
+++ b/lava_dispatcher/actions/boot/__init__.py
@@ -860,7 +860,14 @@ class BootloaderCommandsAction(Action):
         for (index, line) in enumerate(commands):
             connection.sendline(line, delay=self.character_delay)
             if index + 1 == len(commands):
-                continue
+                if final_message and self.expect_final:
+                    connection.prompt_str = final_message
+                else:
+                    continue
+                if error_messages:
+                    if isinstance(connection.prompt_str, str):
+                        connection.prompt_str = [connection.prompt_str]
+                    connection.prompt_str = connection.prompt_str + error_messages
             res = self.wait(connection, max_end_time)
             if res != 0:
                 msg = "matched a bootloader error message: '%s' (%d)" % (
@@ -869,10 +876,6 @@ class BootloaderCommandsAction(Action):
                 )
                 raise InfrastructureError(msg)
 
-        if final_message and self.expect_final:
-            connection.prompt_str = [final_message]
-            self.wait(connection, max_end_time)
-
         self.set_namespace_data(
             action="shared", label="shared", key="connection", value=connection
         )
